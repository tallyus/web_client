'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports['default'] = autoprefix;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _autoprefixerCore = require('autoprefixer-core');

var _autoprefixerCore2 = _interopRequireDefault(_autoprefixerCore);

var _decamelize = require('decamelize');

var _decamelize2 = _interopRequireDefault(_decamelize);

var _fixCase = require('./fix-case');

var _fixCase2 = _interopRequireDefault(_fixCase);

function isRule(_ref) {
  var type = _ref.type;

  return type === 'rule';
}
function isDeclaration(_ref2) {
  var type = _ref2.type;

  return type === 'decl';
}

function parseDeclaration(_ref3) {
  var prop = _ref3.prop;
  var value = _ref3.value;

  return { key: (0, _fixCase2['default'])(prop), value: value };
}
function parseRule(_ref4) {
  var nodes = _ref4.nodes;

  return nodes.filter(isDeclaration).map(parseDeclaration);
}

function objectToStyle(object) {
  return Object.keys(object).map(function (k) {
    return (0, _decamelize2['default'])(k, '-') + ': ' + object[k] + ';';
  }).join('');
}

function cssRule(style) {
  return '* {' + style + '}';
}

function autoprefix(object) {
  var css = cssRule(objectToStyle(object));

  return _autoprefixerCore2['default'].process(css).root.nodes.filter(isRule).map(parseRule).reduce(function (p, c) {
    return p.concat(c);
  }, []).reduce(function (p, c) {
    if (p.hasOwnProperty(c.key)) {
      Array.isArray(p[c.key]) ? p[c.key].push(c.value) : p[c.key] = [p[c.key], c.value];
    } else {
      p = _extends({}, p, _defineProperty({}, c.key, c.value));
    }
    return p;
  }, {});
}

module.exports = exports['default'];